<?php

namespace Tests\Unit;

use App\Models\Lead;
use App\Repositories\Lead\LeadRepository;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class EloquentLeadRepositoryTest extends TestCase
{

    use RefreshDatabase;

    private LeadRepository $repository;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->repository = app(LeadRepository::class);
    }


    /**
     * A basic unit test example.
     *
     * @return void
     */
    public function test_create_a_new_lead()
    {
       $lead = Lead::factory()->make()->toArray();
       $createdLead = $this->repository->create($lead);
       $this->assertNotNull($createdLead);
       $this->assertInstanceOf(Lead::class, $createdLead);
       $this->assertEquals($createdLead->name, $lead['name']);
       $this->assertDatabaseHas('leads', ['name' => $createdLead->name]);
    }

    public function test_find_an_existing_lead()
    {
        $lead = Lead::factory()->create();
        $foundLead = $this->repository->getById($lead->id);
        $this->assertNotNull($foundLead);
        $this->assertInstanceOf(Lead::class, $foundLead);
        $this->assertEquals($lead->id, $foundLead->id);
    }

    public function test_delete_a_existing_lead()
    {
        $lead = Lead::factory()->make()->toArray();
        $createdLead = $this->repository->create($lead);
        $deleted = $this->repository->delete($createdLead);

        $this->assertTrue($deleted);
        $this->assertDatabaseMissing('leads', ['id' => $createdLead->id]);
    }
}
